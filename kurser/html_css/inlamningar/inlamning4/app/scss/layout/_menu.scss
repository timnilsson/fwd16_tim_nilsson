.labelmenutoggle
{   
    .fa-bars
    {   /* Styling the icon that opens the menu */
        @extend %togglebase;
    }

    @include breakpoint(small)
    {
        display: none;
    }
}

.labelmenucross
{   /* Styling the icon that closes the menu */
    display: none;

    .fa-times
    {
        @extend %togglebase;
    }

    @include breakpoint(small)
    {
        display: none;
    }
}

#menutoggle
{   /* Hiding the checkbox-symbol that handles the menu toggling */
    display: none;

    &:checked
    {   
        ~ #menu
        {   /* If the label has been checked/clicked, Open the menu */
            display: block;
        }

        ~ .labelmenucross
        {   /* Display the icon that closes the menu */
            display: block;

            @include breakpoint(small)
            {
                display: none;
            }
        }

        ~ .labelmenutoggle
        {   /* Hide the icon that opens the menu */
            display: none;
        }
    }
}

#menu
{   /* Hiding the whole menu wrapper by default */
    display: none;
    ul
    {   /* The menu shows as flex column by default */
        display: -webkit-flex;
        -webkit-flex-flow: column nowrap;
        display: flex;
        flex-flow: column nowrap;
        list-style: none;

        li
        {
            text-align: center;
            padding: 0.5em 0;

            @include breakpoint(small)
            {
                -webkit-flex: 1 1 50%;
                flex: 1 1 50%;

                &:hover
                {
                    background: rgba(map-get($colors, backgroundstandard), 0.1);
                }
            }

            @include breakpoint(large)
            {
                -webkit-flex: 1;
                flex: 1;
            }
        }

        .social
        {
            ul
            {   /* Change the inner menu to show its content as a row */
                display: -webkit-flex;
                -webkit-flex-flow: row nowrap;
                display: flex;
                flex-flow: row nowrap;
                li
                {   /* Give the icons 25% width so they can fit in one row */
                    -webkit-flex: 1 1 25%;
                    flex: 1 1 25%;
                }
            }

            @include breakpoint(small)
            {
                -webkit-flex: 1 1 100%;
                -webkit-order: 1;
                flex: 1 1 100%;
                order: 1;
            }

            @include breakpoint(large)
            {
                -webkit-flex: 1;
                flex: 1;
            }
        }
        
        

        .dropdown
        {
                
            #menudrop
            {   /* Hiding the checkbox-symbol for the dropdown menu */
                display: none;

                &:checked ~ .dropdown-content
                {   /* If the dropdown label is checked/clicked, show the dropdown content */
                    display: block;
                }
            }

            .drop
            {   /* Styling the dropdown label */
                @extend a;
            }

            .dropdown-content
            {   /* Hiding the dropdown content by default */
                display: none;
                font-size: 0.9em;

                li
                {
                    a
                    {
                        color: map-get($colors, link)+#223;
                    }

                    @include breakpoint(large)
                        {
                            position: relative;
                        }
                }

                .secdrop
                {     
                    @extend a;
                    color: map-get($colors, link)+#223;

                    #secmenudrop
                    {   /* Hiding the checkbox-symbol for the dropdown menu */
                        display: none;

                        &:checked ~ .secdropcon
                        {  /* If the dropdown label is checked/clicked, show the dropdown content */
                            display: block;

                            @include breakpoint(small)
                            {
                                display: -webkit-flex;
                                -webkit-flex-flow: row wrap;
                                display: flex;
                                flex-flow: row wrap;                           
                            }
                        } 
                    }

                    .secdroplabel
                    {   /* Styling the second dropdown label */
                        color: map-get($colors, link)+#223;
                        display: block;
                        padding: 0.5em 0;

                        @include breakpoint(small)
                        {
                            &:hover
                            {
                                background: rgba(map-get($colors, backgroundstandard), 0.1);
                            }
                        }

                        &:after
                        {
                            content: "\21D3";
                            @include breakpoint(large)
                            {
                                content: "\21D2";
                            }
                        }
                    }

                    .secdropcon
                    {   /* Styling the content for the second dropdown */
                        display: none;
                        font-size: 0.55em;
                        
                        li
                        {
                            a
                            {
                                color: map-get($colors, link)+#334;
                            }

                            @include breakpoint(small)
                            {
                                -webkit-flex: 1 1 50%;
                                flex: 1 1 50%;
                            }

                            @include breakpoint(large)
                            {             
                                padding: .6em;
                            }
                        }

                        @include breakpoint(large)
                        {
                            position: absolute;
                            left: 100%;
                            top: 15%;
                            z-index: 100;
                            background: rgba(map-get($colors, backgroundstandard), 0.3);
                        }
                    } 

                    &:hover
                    {   
                        .secdropcon
                        {   /* Show dropdown content when hovering the list item */
                            @include breakpoint(large)
                            {
                                display: block;
                            }
                        }

                    }
                }
            }

            &:hover
            {   
                .dropdown-content
                {   /* Show dropdown content when hovering the list item */
                    @include breakpoint(large)
                    {
                        display: block;
                    }
                }

            }
        }

        @include breakpoint(small)
        {   /* Show menu as a row when screen width goes above 500 pixels */
            -webkit-flex-flow: row wrap;
            flex-flow: row wrap;
        }
    }
    @include breakpoint(small)
    {   /* Show whole menu when screen width goes above 500 pixels */
        display: block;
    }
}   